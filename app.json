{
  "addons": [
    "heroku-postgresql:standard-0",
    "newrelic:wayne",
    "rediscloud:30"
  ],
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-apt"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-python"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-pgbouncer"
    },
    {
      "url": "https://github.com/heroku/heroku-buildpack-nginx"
    }
  ],
  "description": " ",
  "env": {
    "AWS_ACCESS_KEY_ID": {
      "description": "AWS Access Key for S3 storage.",
      "required": false
    },
    "AWS_QUERYSTRING_AUTH": {
      "description": null,
      "required": false
    },
    "AWS_SECRET_ACCESS_KEY": {
      "description": "AWS Secret Key for S3 storage.",
      "required": false
    },
    "AWS_STORAGE_BUCKET_NAME": {
      "description": "S3 Bucket name.",
      "required": false
    },
    "CELERY_BROKER_URL": {
      "description": "Where celery should get tasks, default is REDISCLOUD_URL",
      "required": false
    },
    "CELERY_RESULT_BACKEND": {
      "description": "Where celery should put task results, default is REDISCLOUD_URL",
      "required": false
    },
    "CELERY_TASK_EAGER_PROPAGATES": {
      "description": null,
      "required": false
    },
    "CERTIFICATE_CREATION_DELAY_IN_HOURS": {
      "description": "The number of hours to delay automated certificate creation after a course run ends.",
      "required": false
    },
    "CLOUDFRONT_DIST": {
      "description": null,
      "required": false
    },
    "COUPON_REQUEST_SHEET_ID": {
      "description": "ID of the Google Sheet that contains requests for coupons",
      "required": false
    },
    "CRON_COURSERUN_SYNC_DAYS": {
      "description": "'day_of_week' value for 'sync-courseruns-data' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_COURSERUN_SYNC_HOURS": {
      "description": "'hours' value for the 'sync-courseruns-data' scheduled task (defaults to midnight)",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_DAYS": {
      "description": "'day_of_week' value for 'generate-course-certificate' scheduled task (default will run once a day).",
      "required": false
    },
    "CRON_COURSE_CERTIFICATES_HOURS": {
      "description": "'hours' value for the 'generate-course-certificate' scheduled task (defaults to midnight)",
      "required": false
    },
    "CSRF_TRUSTED_ORIGINS": {
      "description": "Comma separated string of trusted domains that should be CSRF exempt",
      "required": false
    },
    "CYBERSOURCE_ACCESS_KEY": {
      "description": "CyberSource Access Key",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_OPERATOR": {
      "description": "Whether just the name or the name and address should be used in exports verification. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_ADDRESS_WEIGHT": {
      "description": "The weight of the address in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_NAME_WEIGHT": {
      "description": "The weight of the name in determining whether a user passes exports checks. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_EXPORT_SERVICE_SANCTIONS_LISTS": {
      "description": "Additional sanctions lists to validate for exports. Refer to Cybersource docs.",
      "required": false
    },
    "CYBERSOURCE_INQUIRY_LOG_NACL_ENCRYPTION_KEY": {
      "description": "The public key to encrypt export results with for our own security purposes. Should be a base64 encoded NaCl public key.",
      "required": false
    },
    "CYBERSOURCE_MERCHANT_ID": {
      "description": "The cybersource merchant id",
      "required": false
    },
    "CYBERSOURCE_PROFILE_ID": {
      "description": "CyberSource Profile ID",
      "required": false
    },
    "CYBERSOURCE_SECURE_ACCEPTANCE_URL": {
      "description": "CyberSource API endpoint",
      "required": false
    },
    "CYBERSOURCE_SECURITY_KEY": {
      "description": "CyberSource API key",
      "required": false
    },
    "CYBERSOURCE_TRANSACTION_KEY": {
      "description": "The cybersource transaction key",
      "required": false
    },
    "CYBERSOURCE_WSDL_URL": {
      "description": "The URL to the cybersource WSDL",
      "required": false
    },
    "DEFERRAL_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment deferral requests",
      "required": false
    },
    "DJANGO_LOG_LEVEL": {
      "description": "The log level for django",
      "required": false
    },
    "DRIVE_API_PROJECT_ID": {
      "description": "ID for the Google API project where the credentials were created",
      "required": false
    },
    "DRIVE_CLIENT_ID": {
      "description": "Client ID from Google API credentials",
      "required": false
    },
    "DRIVE_CLIENT_SECRET": {
      "description": "Client secret from Google API credentials",
      "required": false
    },
    "DRIVE_OUTPUT_FOLDER_ID": {
      "description": "ID of the Drive folder where newly created Sheets should be kept",
      "required": false
    },
    "DRIVE_SERVICE_ACCOUNT_CREDS": {
      "description": "The contents of the Service Account credentials JSON to use for Google API auth",
      "required": false
    },
    "DRIVE_SHARED_ID": {
      "description": "ID of the Shared Drive (a.k.a. Team Drive). This is equal to the top-level folder ID.",
      "required": false
    },
    "DRIVE_WEBHOOK_CHANNEL_ID": {
      "description": "Channel ID to use for requests to get push notifications for file changes",
      "required": false
    },
    "DRIVE_WEBHOOK_EXPIRATION_MINUTES": {
      "description": "The number of minutes after creation that a webhook (push notification) for a Drive file will expire (Google does not accept an expiration beyond 24 hours, and if the expiration is not provided via API, it defaults to 1 hour).",
      "required": false
    },
    "DRIVE_WEBHOOK_RENEWAL_PERIOD_MINUTES": {
      "description": "The maximum time difference (in minutes) from the present time to a webhook expiration date to consider a webhook 'fresh', i.e.: not in need of renewal. If the time difference is less than this value, the webhook should be renewed.",
      "required": false
    },
    "EDX_API_CLIENT_TIMEOUT": {
      "description": "Timeout (in seconds) for requests made via the edX API client",
      "required": false
    },
    "ENABLE_ORDER_RECEIPTS": {
      "description": "Enable enrollment order receipts.",
      "required": false
    },
    "ENROLLMENT_CHANGE_SHEET_ID": {
      "description": "ID of the Google Sheet that contains the enrollment change request worksheets (refunds, transfers, etc)",
      "required": false
    },
    "GA_TRACKING_ID": {
      "description": "Google analytics tracking ID",
      "required": false
    },
    "GOOGLE_DOMAIN_VERIFICATION_TAG_VALUE": {
      "description": "The value of the meta tag used by Google to verify the owner of a domain (used for enabling push notifications)",
      "required": false
    },
    "GTM_TRACKING_ID": {
      "description": "Google Tag Manager container ID",
      "required": false
    },
    "HEROKU_APP_NAME": {
      "description": "The name of the review app",
      "required": false
    },
    "HOST_IP": {
      "description": null,
      "required": false
    },
    "HUBSPOT_API_KEY": {
      "description": "API key for Hubspot",
      "required": false
    },
    "HUBSPOT_CREATE_USER_FORM_ID": {
      "description": "Form ID for Hubspot Forms API",
      "required": false
    },
    "HUBSPOT_ERROR_CHECK_FREQUENCY": {
      "description": "How many seconds between Hubspot API error checks",
      "required": false
    },
    "HUBSPOT_FOOTER_FORM_GUID": {
      "description": "Form guid over hub spot for footer block.",
      "required": false
    },
    "HUBSPOT_ID_PREFIX": {
      "description": "Hub spot id prefix.",
      "required": false
    },
    "HUBSPOT_NEW_COURSES_FORM_GUID": {
      "description": "Form guid over hub spot for new courses email subscription form.",
      "required": false
    },
    "HUBSPOT_PORTAL_ID": {
      "description": "Hub spot portal id.",
      "required": false
    },
    "LOGOUT_REDIRECT_URL": {
      "description": "Url to redirect to after logout, typically Open edX's own logout url",
      "required": false
    },
    "MAILGUN_BATCH_CHUNK_SIZE": {
      "description": "Maximum number of emails to send in a batch",
      "required": false
    },
    "MAILGUN_FROM_EMAIL": {
      "description": "Email which mail comes from",
      "required": false
    },
    "MAILGUN_KEY": {
      "description": "The token for authenticating against the Mailgun API",
      "required": true
    },
    "MAILGUN_RECIPIENT_OVERRIDE": {
      "description": null,
      "required": false
    },
    "MAILGUN_SENDER_DOMAIN": {
      "description": "The domain to send mailgun email through",
      "required": true
    },
    "MEDIA_ROOT": {
      "description": null,
      "required": false
    },
    "MITXPRO_ADMIN_EMAIL": {
      "description": "E-mail to send 500 reports to.",
      "required": true
    },
    "MITXPRO_BASE_URL": {
      "description": "Base url for the application in the format PROTOCOL://HOSTNAME[:PORT]",
      "required": true
    },
    "MITXPRO_DB_CONN_MAX_AGE": {
      "description": "Maximum age of connection to Postgres in seconds",
      "required": false
    },
    "MITXPRO_DB_DISABLE_SSL": {
      "description": "Disables SSL to postgres if set to True",
      "required": false
    },
    "MITXPRO_DB_DISABLE_SS_CURSORS": {
      "description": null,
      "required": false
    },
    "MITXPRO_EMAIL_BACKEND": {
      "description": null,
      "required": false
    },
    "MITXPRO_EMAIL_HOST": {
      "description": "Outgoing e-mail hostname",
      "required": false
    },
    "MITXPRO_EMAIL_PASSWORD": {
      "description": "Outgoing e-mail auth password",
      "required": false
    },
    "MITXPRO_EMAIL_PORT": {
      "description": "Outgoing e-mail port",
      "required": false
    },
    "MITXPRO_EMAIL_TLS": {
      "description": "Outgoing e-mail TLS setting",
      "required": false
    },
    "MITXPRO_EMAIL_USER": {
      "description": "Outgoing e-mail auth username",
      "required": false
    },
    "MITXPRO_ENVIRONMENT": {
      "description": "The execution environment that the app is in (e.g. dev, staging, prod)",
      "required": true
    },
    "MITXPRO_FEATURES_PREFIX": {
      "description": null,
      "required": false
    },
    "MITXPRO_FROM_EMAIL": {
      "description": "E-mail to use for the from field",
      "required": false
    },
    "MITXPRO_LOG_HOST": {
      "description": null,
      "required": false
    },
    "MITXPRO_LOG_HOST_PORT": {
      "description": null,
      "required": false
    },
    "MITXPRO_LOG_LEVEL": {
      "description": "The log level default",
      "required": false
    },
    "MITXPRO_NOTIFICATION_EMAIL_BACKEND": {
      "description": null,
      "required": false
    },
    "MITXPRO_REGISTRATION_ACCESS_TOKEN": {
      "description": "Access token to secure Open edX registration API with",
      "required": false
    },
    "MITXPRO_REPLY_TO_ADDRESS": {
      "description": "E-mail to use for reply-to address of emails",
      "required": false
    },
    "MITXPRO_SECURE_SSL_HOST": {
      "description": "Hostame to redirect non-secure requests to. Overrides value from HOST header.",
      "required": false
    },
    "MITXPRO_SECURE_SSL_REDIRECT": {
      "description": "Application-level SSL redirect setting.",
      "required": false
    },
    "MITXPRO_SITE_ID": {
      "description": "The default site id for django sites framework",
      "required": false
    },
    "MITXPRO_SUPPORT_EMAIL": {
      "description": "Email address listed for customer support",
      "required": false
    },
    "MITXPRO_USE_S3": {
      "description": "Use S3 for storage backend (required on Heroku)",
      "required": false
    },
    "OPENEDX_API_BASE_URL": {
      "description": "The base URL for the Open edX API",
      "required": true
    },
    "OPENEDX_API_CLIENT_ID": {
      "description": "The OAuth2 client id to connect to Open edX with",
      "required": true
    },
    "OPENEDX_API_CLIENT_SECRET": {
      "description": "The OAuth2 client secret to connect to Open edX with",
      "required": true
    },
    "OPENEDX_API_KEY": {
      "description": "edX API key (EDX_API_KEY setting in Open edX)",
      "required": true
    },
    "OPENEDX_BASE_REDIRECT_URL": {
      "description": "The base redirect URL for an OAuth Application for the Open edX API",
      "required": false
    },
    "OPENEDX_OAUTH_APP_NAME": {
      "description": "The 'name' value for the Open edX OAuth Application",
      "required": true
    },
    "OPENEDX_SERVICE_WORKER_API_TOKEN": {
      "description": "Active access token with staff level permissions to use with OpenEdX API client for service tasks",
      "required": false
    },
    "OPENEDX_SERVICE_WORKER_USERNAME": {
      "description": "Username of the user whose token has been set in OPENEDX_SERVICE_WORKER_API_TOKEN",
      "required": false
    },
    "OPENEDX_TOKEN_EXPIRES_HOURS": {
      "description": "The number of hours until an access token for the Open edX API expires",
      "required": false
    },
    "PGBOUNCER_DEFAULT_POOL_SIZE": {
      "value": "50"
    },
    "PGBOUNCER_MIN_POOL_SIZE": {
      "value": "50"
    },
    "REACT_GA_DEBUG": {
      "description": null,
      "required": false
    },
    "RECAPTCHA_SECRET_KEY": {
      "description": "The ReCaptcha secret key",
      "required": false
    },
    "RECAPTCHA_SITE_KEY": {
      "description": "The ReCaptcha site key",
      "required": false
    },
    "REDISCLOUD_URL": {
      "description": "RedisCloud connection url",
      "required": false
    },
    "REFUND_REQUEST_WORKSHEET_ID": {
      "description": "ID of the worksheet within the enrollment change request spreadsheet that contains enrollment refund requests",
      "required": false
    },
    "REPAIR_COURSEWARE_USERS_FREQUENCY": {
      "description": "How many seconds between repairing courseware records for faulty users",
      "required": false
    },
    "RETRY_FAILED_EDX_ENROLLMENT_FREQUENCY": {
      "description": "How many seconds between retrying failed edX enrollments",
      "required": false
    },
    "ROBOTS_CACHE_TIMEOUT": {
      "description": "How long the robots.txt file should be cached",
      "required": false
    },
    "SECRET_KEY": {
      "description": "Django secret key.",
      "generator": "secret",
      "required": true
    },
    "SENTRY_DSN": {
      "description": "The connection settings for Sentry",
      "required": false
    },
    "SENTRY_LOG_LEVEL": {
      "description": "The log level for Sentry",
      "required": false
    },
    "SHEETS_ADMIN_EMAILS": {
      "description": "Comma-separated list of emails for users that should be added as an editor for all newly created Sheets",
      "required": false
    },
    "SHEETS_DATE_FORMAT": {
      "description": "Python strptime format for datetime columns in enrollment management spreadsheets",
      "required": false
    },
    "SHEETS_DATE_ONLY_FORMAT": {
      "description": "Python strptime format for date columns (no time) in enrollment management spreadsheets",
      "required": false
    },
    "SHEETS_DATE_TIMEZONE": {
      "description": "The name of the timezone that should be assumed for date/time values in spreadsheets. Choose from a value in the TZ database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).",
      "required": false
    },
    "SHEETS_DEFERRAL_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the deferral request spreadsheet",
      "required": false
    },
    "SHEETS_MONITORING_FREQUENCY": {
      "description": "The frequency that the Drive folder should be checked for bulk coupon Sheets that need processing",
      "required": false
    },
    "SHEETS_REFUND_FIRST_ROW": {
      "description": "The first row (as it appears in the spreadsheet) of data that our scripts should consider processing in the refund request spreadsheet",
      "required": false
    },
    "SHEETS_TASK_OFFSET": {
      "description": "How many seconds to wait in between executing different Sheets tasks in series",
      "required": false
    },
    "SHOW_UNREDEEMED_COUPON_ON_DASHBOARD": {
      "description": "Show unused coupon codes on dashboard with enroll button.",
      "required": false
    },
    "SITE_NAME": {
      "description": "Name of the site. e.g MIT xPRO",
      "required": false
    },
    "STATUS_TOKEN": {
      "description": "Token to access the status API.",
      "required": false
    },
    "USE_X_FORWARDED_HOST": {
      "description": "Set HOST header to original domain accessed by user",
      "required": false
    },
    "VOUCHER_COMPANY_ID": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_AMOUNT_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_COURSE_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_CREDITS_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_DATES_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_EMPLOYEE_ID_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_EMPLOYEE_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_DOMESTIC_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_INTERNATIONAL_COURSE_NAME_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_INTERNATIONAL_COURSE_NUMBER_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_INTERNATIONAL_DATES_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_INTERNATIONAL_EMPLOYEE_ID_KEY": {
      "description": null,
      "required": false
    },
    "VOUCHER_INTERNATIONAL_EMPLOYEE_KEY": {
      "description": null,
      "required": false
    },
    "ZENDESK_HELP_WIDGET_ENABLED": {
      "description": "Enabled/disable state for Zendesk web help widget.",
      "required": false
    },
    "ZENDESK_HELP_WIDGET_KEY": {
      "description": "Represents the key for Zendesk web help widget.",
      "required": false
    }
  },
  "keywords": [
    "Django",
    "Python",
    "MIT",
    "Office of Digital Learning"
  ],
  "name": "mitxpro",
  "repository": "https://github.com/mitodl/mitxpro",
  "scripts": {
    "postdeploy": "./manage.py migrate --noinput"
  },
  "success_url": "/",
  "website": "https://github.com/mitodl/mitxpro"
}