# Generated by Django 3.2.23 on 2024-01-02 20:05

from django.db import migrations


def migrate_content_type_id(apps, schema_editor):
    """
    Fixes the revisions of BlogIndexPage and WebinarIndexPage.

    BlogIndexPage and WebinarIndexPage were created through the data migrations.
    We didn't add `content_type` to `Revision.content` that was previously named `PageRevision.content_json`.
    Now, during the upgrade, wagtail expects `content_type` to be present in `Revision.content` but it isn't
    and hence this issue.
    """
    ContentType = apps.get_model("contenttypes", "ContentType")
    Revision = apps.get_model("wagtailcore", "Revision")

    BlogIndexPage = apps.get_model("cms", "BlogIndexPage")
    blog_index_content_type, _ = ContentType.objects.get_or_create(
        app_label="cms", model="blogindexpage"
    )
    blog_index_page_ids = list(BlogIndexPage.objects.values_list("id", flat=True))
    if blog_index_page_ids:
        blog_page_revisions = Revision.objects.filter(object_id__in=blog_index_page_ids)
        for revision in blog_page_revisions:
            blog_page_content = dict(revision.content)
            blog_page_content["content_type"] = blog_page_content["content_type_id"]
            revision.content = blog_page_content
            revision.content_type_id = blog_page_content["content_type_id"]
            revision.save()

    WebinarIndexPage = apps.get_model("cms", "WebinarIndexPage")
    webinar_index_content_type, _ = ContentType.objects.get_or_create(
        app_label="cms", model="webinarindexpage"
    )
    webinar_index_page_ids = list(WebinarIndexPage.objects.values_list("id", flat=True))
    if webinar_index_page_ids:
        webinar_page_revisions = Revision.objects.filter(
            object_id__in=webinar_index_page_ids
        )
        for revision in webinar_page_revisions:
            webinar_page_content = dict(revision.content)
            webinar_page_content["content_type"] = webinar_page_content[
                "content_type_id"
            ]
            revision.content = webinar_page_content
            revision.content_type_id = webinar_page_content["content_type_id"]
            revision.save()


class Migration(migrations.Migration):
    dependencies = [
        ("cms", "0065_blogindexpage"),
        ("wagtailcore", "0071_populate_revision_content_type"),
    ]

    run_before = [
        ("wagtailcore", "0072_alter_revision_content_type_notnull"),
    ]

    operations = [
        migrations.RunPython(migrate_content_type_id, migrations.RunPython.noop)
    ]
